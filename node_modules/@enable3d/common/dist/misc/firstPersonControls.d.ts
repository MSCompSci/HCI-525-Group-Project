/**
 * @description  This code has originally been copied from Sketchbook
 *
 * @author       swift502 <blaha.j502@gmail.com> (http://jblaha.art/)
 * @copyright    Copyright (c) 2018 swift502; Project Url: https://github.com/swift502/Sketchbook
 * @license      {@link https://github.com/swift502/Sketchbook/blob/master/LICENSE GPL-3.0}
 *
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE GNU GPLv3}
 */
import { Object3D, OrthographicCamera, PerspectiveCamera, Vector2, Vector3 } from 'three';
export interface FirstPersonControlsConfig {
    offset?: Vector3;
    /**
     * Sensitivity of the movement
     * @default new THREE.Vector2(0.25, 0.25)
     */
    sensitivity?: Vector2;
    radius?: number;
    targetRadius?: number;
    interpolationFactor?: number;
    pointerLock?: boolean;
    autoUpdate?: boolean;
}
declare class FirstPersonControls {
    private camera;
    private target;
    private config;
    sensitivity: Vector2;
    radius: number;
    targetRadius: number;
    offset: Vector3;
    interpolationFactor: number;
    private theta;
    private phi;
    constructor(camera: PerspectiveCamera | OrthographicCamera, target: Object3D, config: FirstPersonControlsConfig);
    update(deltaX: number, deltaY: number): void;
}
export { FirstPersonControls };
//# sourceMappingURL=firstPersonControls.d.ts.map