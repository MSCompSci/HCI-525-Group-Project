/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
import { Mesh, Vector3 } from 'three';
export class ExtendedMesh extends Mesh {
    constructor(geometry, material) {
        super(geometry, material);
        this.isExtendedMesh = true;
        this.isGroup = false;
        this.vector3 = new Vector3();
        this.hasBody = false;
        // convex object breaking
        this.fragmentDepth = 0;
        this.breakable = false;
        this.fractureImpulse = 1;
        this.name = `object-${this.id}`;
    }
    /** Returns all values relative to the world. */
    get world() {
        return {
            theta: this.worldTheta,
            phi: this.worldPhi
        };
    }
    /** Get the theta relative to the world. */
    get worldTheta() {
        this.getWorldDirection(this.vector3);
        return Math.atan2(this.vector3.x, this.vector3.z);
    }
    /** Get the phi relative to the world. */
    get worldPhi() {
        this.getWorldDirection(this.vector3);
        return Math.acos(this.vector3.y);
    }
}
//# sourceMappingURL=extendedMesh.js.map