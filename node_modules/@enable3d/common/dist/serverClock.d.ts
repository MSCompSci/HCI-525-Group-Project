/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
/**
 * @author       Alex Bennett (https://github.com/timetocode)
 * @copyright    Copyright (c) 2014 Alex Bennett; Project Url: https://github.com/timetocode/node-game-loop
 * @license      {@link https://github.com/timetocode/node-game-loop/blob/master/LICENSE|MIT}
 */
/**
 * A very precise server clock for you game loop.
 * Will fallback to setTimeout() if frame rate is below 25.
 */
export declare class ServerClock {
    /**
     * Length of a tick in milliseconds. The denominator is your desired framerate.
     * e.g. 1000 / 20 = 20 fps,  1000 / 60 = 60 fps
     */
    private tickLengthMs;
    /** timestamp of each loop */
    private previousTick;
    /** number of times ServerClock gets called */
    private actualTicks;
    /** store the delta value */
    private _delta;
    /** store the time from the start */
    private startTime;
    /** store is the clock is running or not */
    private _isRunning;
    private _highAccuracy;
    private _onTickCallback;
    constructor(fps?: number, autoStart?: boolean);
    /**
     * Start the clock.
     * @param fps Interval in milliseconds. Default is 60 fps.
     */
    start(fps?: number): void;
    /** Stop the clock */
    stop(): void;
    /** Is clock running? */
    isRunning(): boolean;
    /** Returns the last delta value. */
    getDelta(): number;
    /** Keeps track of the total time that the clock has been running. */
    getElapsedTime(): number;
    /** Event listener for every new tick. */
    onTick(onTickCallback: (delta: number) => void): void;
    private loop;
    /** Disable high accuracy to save some cpu power. This is very useful while developing. */
    disableHighAccuracy(): void;
    /** Enable hight accuracy. Much more precise but uses much more cpu power. */
    enableHighAccuracy(): void;
}
//# sourceMappingURL=serverClock.d.ts.map