/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */
import { AmmoPhysics } from '../physics';
import { ExtendedObject3D } from '@enable3d/common/dist/types';
export default class AllHitsRayResultCallback {
    protected physics: AmmoPhysics;
    protected _btRayCallback: Ammo.AllHitsRayResultCallback;
    constructor(physics: AmmoPhysics);
    getHitPointsWorld(): {
        x: number;
        y: number;
        z: number;
    }[];
    getHitPointWorld(): {
        x: number;
        y: number;
        z: number;
    }[];
    getHitNormalsWorld(): {
        x: number;
        y: number;
        z: number;
    }[];
    getCollisionObjects(): ExtendedObject3D[];
}
//# sourceMappingURL=allHitsRayResultCallback.d.ts.map